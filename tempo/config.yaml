stream_over_http_enabled: true
server:
  http_listen_port: 3200
  log_level: info

overrides:
  defaults:
    cost_attribution:
      dimensions:
        service.name: ""
    metrics_generator:
      processors: [service-graphs, span-metrics, local-blocks]
      generate_native_histograms: both

storage:
  trace:
    backend: s3
    wal:
      path: /var/tempo/wal
    s3:
      bucket: tempo
      endpoint: minio:9000
      access_key: $ACCESS_KEY
      secret_key: $SECRET_KEY
      insecure: true

cache:
  background:
    writeback_goroutines: 5
  caches:
    - roles:
        - bloom
        - frontend-search
      redis:
        endpoint: redis:6379
        db: 1

query_frontend:
  search:
    duration_slo: 5s
    throughput_bytes_slo: 1.073741824e+09
    metadata_slo:
      duration_slo: 5s
      throughput_bytes_slo: 1.073741824e+09
  trace_by_id:
    duration_slo: 100ms
  metrics:
    max_duration: 720h
    query_backend_after: 5m
    duration_slo: 5s
    throughput_bytes_slo: 1.073741824e+09

distributor:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "tempo:4317"
        http:
          endpoint: "tempo:4318"

compactor:
  compaction:
    block_retention: 720h

ingester:
  max_block_duration: 5m

metrics_generator:
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  storage:
    path: /var/tempo/generator/wal
    remote_write:
      - url: http://prometheus:9090/api/v1/write
        send_exemplars: true
  traces_storage:
    path: /var/tempo/generator/traces
  processor:
    local_blocks:
      filter_server_spans: false
      flush_to_storage: true
